{"version":3,"file":"options.js","mappings":"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","sources":["webpack://golocal/./src/options/index.js"],"sourcesContent":["function save_form() {\n    var name = document.getElementById('name').value;\n    var url = document.getElementById('url').value;\n    var port = document.getElementById('port').value;\n  \n    if (!validate_save(name, url, port)) {\n      return;\n    }\n  \n    get_config(function(result) {\n      let config = {\n        'url': url,\n        'port': port,\n        'checked': 'unchecked'\n      };\n  \n      result[name] = config;\n      save_to_storage(result, function() {\n        show_all();\n        add_message(`Saved config ${name} | Url: ${url}, Port: ${port}`)\n      });\n    });\n  }\n  \n  function validate_save(name, url, port) {\n    if (name === \"\" || url === \"\" || port === \"\") {\n      add_message(\"WRONG!!! All fields must be completed. What were you thinking?\", true)\n      return false;\n    } else {\n      return true;\n    }\n  }\n  \n  // Saves which config is set\n  function save_config(id) {\n    get_config(function(result) {\n      for (const config of Object.entries(result)) {\n        if (config[0] == id) {\n          if (config[1].checked == \"checked\") {\n            config[1].checked = \"unchecked\";\n            add_message(`De-selected config ${id}.`)\n          } else {\n            config[1].checked = \"checked\";\n            add_message(`Config ${id} is now set to default.`)\n          }\n        } else {\n          config[1].checked = \"unchecked\";\n        }\n      }\n  \n      save_to_storage(result, function() {\n        show_all();\n      });\n    }.bind({id:id}))\n  }\n  \n  // Resets config in Storage\n  function save_to_storage(result, callback) {\n    chrome.storage.sync.set({'config': result}, function() {\n      callback()\n    })\n  }\n  \n  function get_config(callback) {\n    chrome.storage.sync.get('config', function (result) {\n      if (result == null || result.config == null) {\n        callback({'config': {}});\n      } else {\n        callback(result.config);\n      }\n    });\n  }\n  \n  function get_config_by_id(id, callback) {\n    get_config(function(result) {\n      var config = result[id];\n  \n      if (config != null) {\n        callback(config);\n      }\n    })\n  }\n  \n  function set_fields(id) {\n    get_config_by_id(id, function(result) {\n      document.getElementById('name').value = id;\n      document.getElementById('url').value = result.url;\n      document.getElementById('port').value = result.port;\n  \n      add_message(`Editing config ${id}.`)\n    }.bind({id: id}))\n  }\n  \n  function show_all() {\n    var show_all = document.getElementById('all');\n  \n    if (show_all == null) {\n      return;\n    }\n  \n    while(show_all.firstChild) {\n      show_all.removeChild(show_all.firstChild);\n    }\n  \n    get_config(function(result) {\n      var use_default = true;\n      var configs = Object.entries(result);\n  \n      if (configs.length == 0) {\n        add_message(\"No configs added. Using default of http://localhost:8084.\")\n        return;\n      }\n  \n      for (const config of configs) {\n        let name = config[0];\n        let url = config[1].url;\n        let port = config[1].port;\n        let checked = config[1].checked;\n  \n        if (checked == \"checked\") {\n          use_default = false\n        }\n  \n        show_all.appendChild(config_row(name, port, url, checked));\n      }\n  \n      if (use_default) {\n        add_message(\"No configs selected. Using default of http://localhost:8084.\")\n      }\n    });\n  };\n  \n  function delete_config(id) {\n    get_config(function(result) {\n      let config = result[this.id];\n  \n      if (config != null) {\n        delete result[this.id];\n      }\n  \n      save_to_storage(result, function() {\n        add_message(`Deleted config ${this.id}.`)\n        show_all();\n      }.bind({id:this.id}));\n  \n    }.bind({id:id}))\n  }\n  \n  function clear_options() {\n    chrome.storage.sync.clear();\n    show_all();\n  }\n  \n  function add_message(message, warning = false) {\n    var messages = document.getElementById('messages');\n  \n    var message_node = document.createElement('div');\n    message_node.classList.add(\"message\");\n  \n    if (warning) {\n      message_node.classList.add(\"warning\");\n    }\n  \n    message_node.innerHTML = message;\n  \n    messages.prepend(message_node)\n  }\n  \n  // HTML Builders\n  \n  function config_row(name, port, url, checked) {\n    let div = document.createElement('div');\n    div.id = name;\n    div.classList.add(\"config_row\");\n    div.innerHTML = `${select_check(checked)} ${address(name, url, port)} ${delete_button()}`;\n  \n    return div;\n  }\n  \n  function address(name, url, port) {\n    return `<div class='name'>${name}</div><div class='address'>Url: ${url}, Port: ${port}</div>`;\n  }\n  \n  function select_check(checked) {\n    return `<input type='checkbox' class='select_check' name='selected'' ${checked}>`;\n  }\n  \n  function delete_button() {\n    return \"<button class='std_button' id='delete'>X</button>\";\n  }\n  \n  window.onload = show_all();\n  window.onload = function() {\n    add_message(\"Ready to Rock!\")\n  };\n  \n  document.addEventListener('click', function(e){\n    if(e.target && e.target.id == 'delete') {\n      let id = e.target.parentElement.id;\n  \n      delete_config(id);\n    }\n  })\n  \n  document.addEventListener('change', function(e){\n    if(e.target && e.target.name == 'selected') {\n      let id = e.target.parentElement.id;\n  \n      save_config(id);\n    }\n  })\n  \n  document.addEventListener('click', function(e){\n    if(e.target && e.target.classList.contains(\"address\") || e.target.classList.contains(\"name\")) {\n      let id = e.target.parentElement.id;\n      set_fields(id);\n    }\n  })\n  \n  document.getElementById('save_form').addEventListener('click', save_form);"],"names":["save_to_storage","result","callback","chrome","storage","sync","set","get_config","get","config","show_all","document","getElementById","firstChild","removeChild","use_default","configs","Object","entries","length","name","url","port","checked","appendChild","config_row","add_message","message","warning","messages","message_node","createElement","classList","add","innerHTML","prepend","div","id","select_check","address","window","onload","addEventListener","e","target","parentElement","this","bind","contains","get_config_by_id","value","validate_save"],"sourceRoot":""}